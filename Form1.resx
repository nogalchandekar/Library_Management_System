<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        IiD/2Q==
</value>
  </data>
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        IiD/2Q==
</value>
  </data>
</root>