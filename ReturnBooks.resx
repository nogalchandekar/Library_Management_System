<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAMwAAADACAMAAAB/Pny7AAAABGdBTUEAALGPC/xhBQAAAGZQTFRF9vb2
        QkJC////+vr6Pj4+OTk5NjY27OzsJycnKioq8vLyMTEx2NjY5ubmpaWl3NzcU1NTXl5egYGBz8/PIiIi
        uLi4cHBwwMDAGBgYr6+vSEhIa2treXl5nJycjY2Nx8fHDw8PAAAAOMfrbgAAB21JREFUeF7tnG2TojAM
        gLGh5U3eERYEvPv/f/Katq5awFv3g8WZPHM3syCsCUmTtCnrEQRBEARBEARBEARBEARBEARBEARBEARB
        EARBEARBEJ8IGMzhpwLAGPPiNJekgScPPlUlqUhQn6ZqbM9I247VdKoDqZC54GMABnlWlcXAhRBcI38Y
        irLKcvmhuewTABZn5eHgSw4P6DNlFn+MOsCObSgsNe7xRdgeP0Id8OpzI4zYyhZc/sP/93YSzbmWl+4b
        8PIqvKoi5R+Kojy3o6Q9l0UxyFPmQxFW+b7VgTTjiRbWF37Zzn2dYkRWeGndz215uHpgwrN0v9oAXM6h
        lpSHRZXVgQzPd+LiUVBnVRFxdZEfni97TTwyhA3aLDwpp42MorLPVCZanWSQgc18sitYOmsH8qPyaS5R
        OaiM9LViTneojYzH5mkfsv+ObBknMnkhwmWUNmd3A6tLrUvUHn8SpMA7tto4vKx3Nm7gWKiA7EfTT+Mt
        eFmitBHFcVfaQD5oXZJ64TNmAiAxJ75htdFmyHekDaTaLqIILF2kBvGxm+Z56o4xHj3AgkL5pij2k3Ag
        btVgTs4LXeJ6GpowSpIobIapjhfanPWdrf2JM9gcokSiDR4lkoN85nqUI37EZzs4QNAqm4bzTkIa6/6g
        PGK0fAXiU2FqmytJcbJMAOmotPnT7UIblg/48JOzNYohzg46Wt/BZcq3LsuVp/lDvgNtAEYUeZEtZOQ9
        fHvYDX7IbE/TGYqPOyjTWI8i+4feEgW69fmZLzr7ypMyrd87Nw2kZ3yuYraetxcvfUzDD7G5xADejMOG
        n53HZzZpJ7MFYXOkRF8hsiMXpNrRJsemgaMuyWwXgfQLT6/ztdC8x9O8dFzWQIYe4p/tgp9Nm4aRprFN
        AOyMo0ZkTpWRcVW5+8V2EPZ8dWZx+UUNPDu6vxc46aFrywBBo8TeoLFKBXmDDiMnh8pAMGPC+7OYkLD6
        iZdJP1vU1lBjFZHMCy3fh5zFSG/yB1s0OaKtOuaRZJlSGOYa3+nM5oQGCFdEU3FhE5GtqI/FanQyh+8H
        4gpljpa+8boyEOBzEZWzqQCk6Bv8vJDMY6fnbnZauQVDgD+4qwLUMG/sqkwC9dNoFi4n1x70eEtUm8P3
        k6GfN7k5ugeeFACyBFh7/LkaNJk5ej+VdCa/WAunzCw8rcLLpWHkoMHImFTm8O3E+PVi9etZ98TPmvVZ
        JUYTv7BK6ncBwbZjgDdsmoYP9nRBk6k47yht6sq4WU8N7LRpmmYlliHqjkVF/SagVspsLK7G40ZFE1Xr
        nqQj4JejtVpQ46LZqEAgL1cTpyg3SmM4ql9nT6rfBCi/SLbKdqj1ku0jYth69JBjom0cFc6gyim+OQeR
        ZejC06LtUhJyDBnhSgp+B/9TxmNBJR5iGheVvYB7Y+fKeABdOai+ueqeD2X3ZG3MsTJPx4w+y6CbsWeO
        HfS5A22WjRvcjpkn0Qy8a6uSsfh46brLMWbXM+mqOo6j2XaeYWnW3rriuFHre3MWwKXN1pqyjvOMrgA6
        c3hDyjuGYpAiLwQDqeYgwnGt/++2AojXazOAHhtp/qHtrd1LwOK+xeV0UfRLbdRSW+hqqhljE09WzY9f
        D/FkdvzwoZxy7WJqTyDLp9LUn74/2a0NVTVzV1Xz+nwGYrO3AUXGcDyf6jQI0vo0Y5j+/kjMj9q4ns+Y
        meZDOANvwpM3fC4ihfhWRBM+Ntl1MAudzTRBrQFYaS57OmG+5+tBcJ2CI0fBTH5/ip7xsDgL3Ubhv0Z0
        n1PUAq3vrocuhwcm7fAmAKT2rsxn+P79nWiYxBpIb0WvaN6W9EBvCPgpSfstOlPjz+GK5nWt2b8q83QZ
        Y43b0gZDkzpdazZdgC/TngFA3V7BL0zuZBeMG067ALJwxhzISyPR87X/Na79ANBdTZf9GVm2q90iQpvm
        ZcMo0+Cd7KJ+TftkbvQGTE+zRG9hnZLvNQYcNQAlPgbHPU1pGtW/8zGgMbVV40X4iHdmqAt329KUGDmK
        HEw3/0VwBwHkatuZeiJOgUC3VquYdWrXyIv40s90z4qfXYYyDTspmQ69ttHLSHv0esfQxqrtWwH9XIvL
        /AsvkzfOF+VkonJuF4luBh5E+XpgRvxCLeM6LDEfYPVfJdWvdLne99dZ7W/BphdLsiWN6x1N3wCMj7PL
        lwn3sA3QAEH5clV2T1K6j8o3pDY4in+J2JUuUhtd1vwK92WMDVzfOHkZ3jqckW3A8up3SbPaw4ZmG5ZO
        5uWrF+DJtMc3m6SnxSfzztmPSQZ7O/1uADlwmhfqAL+Rw2Wnukgg7vmPVwEj3u/VLBo5RZubH/la0sxy
        WmZu2yvA8jF5thEY8UUy5tsvP+4IYOks49SmPr6MefNKV22nYIdsxLeybY1UA70Y7Y7a3mGQ9/NYFjxJ
        EqGQP/CiHOc+Nx30TwLfYj52/TRXFb5CX1Xz1HfHT/wbGhr9102CIJUEH/3XTW6oN04/XguCIAiCIAiC
        IAiCIAiCIAiCIAiCIAiCIAiCIAiCIIif4nn/AClXV9+s9sF9AAAAAElFTkSuQmCC
</value>
  </data>
</root>