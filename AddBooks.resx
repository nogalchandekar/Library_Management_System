<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        EAg//9k=
</value>
  </data>
</root>